'use strict';
/*
const bookings = [];

const createBooking = function (
  flightNum,
  numPassengers = 7777,
  price = 7777 * numPassengers
) {
  // ES5 way
  //   numPassengers = numPassengers || 7777;
  //   price = price || 7777;
  const booking = {
    flightNum,
    numPassengers,
    price,
  };
  console.log(booking);
  bookings.push(booking);
};

// createBooking('LH123');
// createBooking('LH123', 2, 800);
// createBooking('LH123', 3);
// createBooking('LH123', 5);

// createBooking('LH123', undefined, 1000);


const flight = 'LH234';
const stubs = {
  name: 'Stuart Rippington',
  passport: 24353498236,
};

const checkIn = function (flightNum, passenger) {
  flightNum = 'LH999';
  passenger.name = 'Mr. ' + passenger.name;

  if (passenger.passport === 24353498236) {
    alert('Check In');
  } else {
    alert('Wrong Passport');
  }
};

checkIn(flight, stubs);
console.log(flight);
console.log(stubs);

const flightNum = flight;
const passenger = stubs;

const newPassport = function (person) {
  person.passport = Math.trunc(Math.random()) * 1000000000000;
};

newPassport(stubs);
checkIn(flight, stubs);
*/
/*
const oneWord = function (str) {
  return str.replace(/ /g, '').toLowerCase();
};

const upperFirstWord = function (str) {
  const [first, ...others] = str.split(' ');
  return [first.toUpperCase(), ...others].join(' ');
};
// Higher order function
const transformer = function (str, fn) {
  console.log(`Original string: ${str}`);
  console.log(`Transformed string ${fn(str)}`);

  console.log(`Transformed by: ${fn.name}`);
};

transformer('JavaScript is the best!', upperFirstWord);
transformer('JavaScript is the best!', oneWord);

const high5 = function () {
  console.log('Booyah');
};
document.body.addEventListener('click', high5);

['Stubs', 'Jepu', 'Rikuraku'].forEach(high5);

// CREATE YOUR OWN HIGHER ORDER FUNCTION WITH CALL BACK FUNCTIONS
*/

const greet = function (greeting) {
  return function (name) {
    console.log(`${greeting} ${name}`);
  };
};

const greeterHey = greet('Hey');

greeterHey('Stubs');
greeterHey('Jertta');

greet('Hello')('Stubs');

const greetArr = greeting => name => console.log(`${greeting} ${name}`);

greetArr('Hey')('Stubin');

const lufthansa = {
  airline: 'Lufthansa',
  iataCode: 'LH',
  bookings: [],
  // book: function() {}
  book(flightNum, name) {
    console.log(
      `${name} booked a seat on ${this.airline} flight ${this.iataCode}${flightNum}`
    );
    this.bookings.push({ flight: `${this.iataCode}${flightNum}`, name });
  },
};

lufthansa.book(420, 'Stubs Rippleham');
lufthansa.book(420, 'Jepu Latva-Kiskola');

const eurowings = {
  airline: 'Eurowings',
  iataCode: 'EW',
  bookings: [],
};

const book = lufthansa.book;

// book(23, 'Smokey McPot'); - wont work
book.call(lufthansa, 823, 'Smokey McPot');
book.call(eurowings, 245, 'Johnny Pot Smoker');

console.log(lufthansa.bookings);

const swiss = {
  airline: 'Swiss Airlines',
  iataCode: 'LX',
  bookings: [],
};

book.call(swiss, 666, 'The Dark Lord');
console.log(swiss.bookings);

// Apply Method

const flightData = [7777, 'Reynard McSqueeb'];
book.apply(swiss, flightData);
console.log(swiss.bookings);

book.call(swiss, ...flightData);

// Bind Method

const bookEW = book.bind(eurowings);
const bookLH = book.bind(lufthansa);
const bookLX = book.bind(swiss);
bookEW(22, 'Scareface Maggie');

const bookEW69 = book.bind(eurowings, 69);
bookEW69('Romeo Romeo');

// With Event Listeners
lufthansa.planes = 300;
lufthansa.buyPlane = function () {
  console.log(this);
  this.planes++;
  console.log(this.planes);
};
document
  .querySelector('.buy')
  .addEventListener('click', lufthansa.buyPlane.bind(lufthansa));

// Partial application

const addTax = (rate, value) => value + value * rate;
console.log(addTax(0.1, 200));

const addVAT = addTax.bind(null, 0.23);
console.log(addVAT(100));
// addVAT = value => value + value * rate;

const runOnce = function () {
  console.log('This will never run again');
};
runOnce();

(function () {
  console.log('This will never run again');
  const isPrivate = 23;
})();

// console.log(isPrivate);

(() => console.log('This will ALSO never run again'))();

{
  const isPrivate = 23;
  var notPrivate = 46;
}
console.log(isPrivate);
console.log(notPrivate);

const secureBooking = function () {
  let passengerCount = 0;

  return function () {
    passengerCount++;
    console.log(`${passengerCount} passengers`);
  };
};

const booker = secureBooking();

booker();
booker();
booker();

console.dir(booker);

// Example 1 reassign function - closure

let f;

const g = function () {
  const a = 23;
  f = function () {
    console.log(a * 2);
  };
};

const h = function () {
  const b = 777;
  f = function () {
    console.log(b * 2);
  };
};

g();
f();
h();
f();

// Example 2

const boardPassengers = function (n, wait) {
  const perGroup = n / 3;

  setTimeout(function () {
    console.log(`We are now boarding all ${n} passengers`);
    console.log(`There are 3 groups, each with ${perGroup} passengers`);
  }, (wait = 1000));

  console.log(`Will start boarding in ${wait} seconds`);
};

const perGroup = 1000;
boardPassengers(180, 3);


